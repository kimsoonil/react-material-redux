{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Box, Button, Container, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: ''\n  }); // reset login status\n\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(user => ({ ...user,\n      [name]: value\n    }));\n  } // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   setSubmitted(true);\n  //   if (user.name && user.email && user.password) {\n  //     dispatch(userActions.register(user));\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      name: Yup.string().max(255).required('First name is required'),\n      password: Yup.string().max(255).required('password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: () => {\n      navigate('/app/dashboard', {\n        replace: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    name: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Use your email to create new account\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.name && errors.name),\n    helperText: touched.name && errors.name,\n    fullWidth: true,\n    label: \"Name\",\n    margin: \"normal\",\n    name: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    variant: \"outlined\",\n    inputProps: {\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    helperText: touched.email && errors.email,\n    fullWidth: true,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    type: \"test\",\n    value: values.email,\n    variant: \"outlined\",\n    inputProps: {\n      maxLength: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    helperText: touched.password && errors.password,\n    fullWidth: true,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    inputProps: {\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, registering && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }), \"Sign up now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/login\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))))));\n};\n\nexport default RegisterView;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js"],"names":["React","useState","useEffect","Link","RouterLink","useNavigate","CircularProgress","Box","Button","Container","TextField","Typography","makeStyles","Yup","Formik","Page","useDispatch","useSelector","userActions","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","RegisterView","classes","navigate","submitted","setSubmitted","registering","state","registration","dispatch","user","setUser","name","email","password","logout","handleChange","e","value","target","policy","object","shape","string","max","required","boolean","oneOf","replace","errors","handleBlur","handleSubmit","isSubmitting","touched","values","Boolean","maxLength"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: ''\n});\n\n  // reset login status\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    setUser((user) => ({ ...user, [name]: value }));\n  }\n\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n\n  //   setSubmitted(true);\n  //   if (user.name && user.email && user.password) {\n  //     dispatch(userActions.register(user));\n  //   }\n  // }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n        <Formik \n          initialValues={{\n            email: '',\n            name: '',\n            password: '',\n            policy: false\n          }}\n          validationSchema={\n            Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              name: Yup.string().max(255).required('First name is required'),\n              password: Yup.string().max(255).required('password is required'),\n              policy: Yup.boolean().oneOf([true], 'This field must be checked')\n            })\n          }\n          onSubmit={() => {\n            navigate('/app/dashboard', { replace: true });\n          }}\n          > \n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) =>\n          <form name=\"form\" onSubmit={handleSubmit}>\n            <Box mb={3}>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h2\"\n              >\n                Create new account\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"body2\"\n              >\n                Use your email to create new account\n              </Typography>\n            </Box>\n            <TextField\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n              fullWidth\n              label=\"Name\"\n              margin=\"normal\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n              variant=\"outlined\"\n              inputProps={{ maxLength: 20 }}\n            />\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n              fullWidth\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"test\"\n              value={values.email}\n              variant=\"outlined\"\n              inputProps={{ maxLength: 40 }}\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n              inputProps={{ maxLength: 20 }}\n            />\n            <Box my={2}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                disabled={isSubmitting}\n                variant=\"contained\"\n              >\n                {registering && <CircularProgress />}\n                Sign up now\n              </Button>\n            </Box>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              Have an account?\n              {' '}\n              <Link\n                component={RouterLink}\n                to=\"/login\"\n                variant=\"h6\"\n              >\n                Sign in\n              </Link>\n            </Typography>\n          </form>\n          }\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"]},"metadata":{},"sourceType":"module"}