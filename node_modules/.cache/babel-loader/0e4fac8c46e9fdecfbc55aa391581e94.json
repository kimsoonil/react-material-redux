{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nimport * as tslib_1 from \"tslib\";\nimport { AuthError } from \"./AuthError\";\nexport var ServerErrorMessage = {\n  serverUnavailable: {\n    code: \"server_unavailable\",\n    desc: \"Server is temporarily unavailable.\"\n  },\n  unknownServerError: {\n    code: \"unknown_server_error\"\n  }\n};\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\n\nvar ServerError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ServerError, _super);\n\n  function ServerError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ServerError\";\n    Object.setPrototypeOf(_this, ServerError.prototype);\n    return _this;\n  }\n\n  ServerError.createServerUnavailableError = function () {\n    return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\n  };\n\n  ServerError.createUnknownServerError = function (errorDesc) {\n    return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\n  };\n\n  return ServerError;\n}(AuthError);\n\nexport { ServerError };","map":{"version":3,"sources":["../../src/error/ServerError.ts"],"names":[],"mappings":"AAAA;;;AAGG;;AAEH,SAAS,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAM,kBAAkB,GAAG;AAC9B,EAAA,iBAAiB,EAAE;AACf,IAAA,IAAI,EAAE,oBADS;AAEf,IAAA,IAAI,EAAE;AAFS,GADW;AAK9B,EAAA,kBAAkB,EAAE;AAChB,IAAA,IAAI,EAAE;AADU;AALU,CAA3B;AAUP;;AAEG;;AACH,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAE7B,WAAA,WAAA,CAAY,SAAZ,EAA+B,YAA/B,EAAoD;AAApD,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,EAAiB,YAAjB,KAA8B,IADlC;;AAEI,IAAA,KAAI,CAAC,IAAL,GAAY,aAAZ;AAEA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,WAAW,CAAC,SAAxC;;AACH;;AAEM,EAAA,WAAA,CAAA,4BAAA,GAAP,YAAA;AACI,WAAO,IAAI,WAAJ,CAAgB,kBAAkB,CAAC,iBAAnB,CAAqC,IAArD,EACH,kBAAkB,CAAC,iBAAnB,CAAqC,IADlC,CAAP;AAEH,GAHM;;AAKA,EAAA,WAAA,CAAA,wBAAA,GAAP,UAAgC,SAAhC,EAAiD;AAC7C,WAAO,IAAI,WAAJ,CAAgB,kBAAkB,CAAC,kBAAnB,CAAsC,IAAtD,EACH,SADG,CAAP;AAEH,GAHM;;AAIX,SAAA,WAAA;AAAC,CAlBD,CAAiC,SAAjC,CAAA","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nexport var ServerErrorMessage = {\r\n    serverUnavailable: {\r\n        code: \"server_unavailable\",\r\n        desc: \"Server is temporarily unavailable.\"\r\n    },\r\n    unknownServerError: {\r\n        code: \"unknown_server_error\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    ServerError.createServerUnavailableError = function () {\r\n        return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\r\n    };\r\n    ServerError.createUnknownServerError = function (errorDesc) {\r\n        return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\r\n    };\r\n    return ServerError;\r\n}(AuthError));\r\nexport { ServerError };\r\n//# sourceMappingURL=ServerError.js.map"]},"metadata":{},"sourceType":"module"}