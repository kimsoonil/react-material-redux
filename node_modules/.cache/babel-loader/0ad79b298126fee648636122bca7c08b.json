{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/reports/DashboardView/Sales.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      backgroundColor: colors.indigo[500],\n      data: [18, 5, 19, 27, 29, 19, 20],\n      label: 'This year'\n    }, {\n      backgroundColor: colors.grey[200],\n      data: [11, 20, 12, 29, 30, 25, 13],\n      label: 'Last year'\n    }],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: {\n      padding: 0\n    },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: theme.palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          fontColor: theme.palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: theme.palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: theme.palette.divider\n        }\n      }]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Button, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }\n      }),\n      size: \"small\",\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Last 7 days\"),\n    title: \"Latest Sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: 400,\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }\n    }),\n    size: \"small\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Overview\")));\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\nexport default Sales;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/reports/DashboardView/Sales.js"],"names":["React","clsx","PropTypes","Bar","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","useStyles","root","Sales","className","rest","classes","theme","data","datasets","backgroundColor","indigo","label","grey","labels","options","animation","cornerRadius","layout","padding","legend","display","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","palette","text","secondary","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","background","default","bodyFontColor","borderColor","borderWidth","enabled","footerFontColor","intersect","mode","titleFontColor","primary","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n"]},"metadata":{},"sourceType":"module"}