{"ast":null,"code":"import * as types from '../actions/ActionTypes'; // 초기상태 정하기\n\nconst initialState = {\n  number: 0,\n  // 최초 초기상태 정의\n  dummy: 'dumbdumb',\n  dumbObject: {\n    d: 0,\n    u: 1,\n    m: 2,\n    b: 3\n  }\n}; // eslint-disable-next-line max-len\n\nexport default function counter(state = initialState, action) {\n  // 초기값 입력이 undefined일 때 initialState 할당\n  switch (action.type) {\n    case types.INCREMENT:\n      return { ...state,\n        // ...state에서 기존 정의한 state를 모두 복사해옴.\n        number: state.number + 1,\n        // 그 중 number에 새 값 설정\n        dumbObjct: { ...state.dumbObject,\n          u: 0\n        } // object가 내부 state에 있을 경우 값 덮어씌우기\n\n      };\n\n    case types.DECREMENT:\n      return { ...state,\n        number: state.number - 1\n      };\n\n    default:\n      return state;\n    // 기존 상태 그냥 전달. 이 세 케이스에 SET_COLOR가 없으므로 다른 reducer를 찾게 됨\n  }\n}","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/redux/reducers/reducer.js"],"names":["types","initialState","number","dummy","dumbObject","d","u","m","b","counter","state","action","type","INCREMENT","dumbObjct","DECREMENT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AACR;AACXC,EAAAA,KAAK,EAAE,UAFY;AAGnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,CAAC,EAAE,CADO;AAEVC,IAAAA,CAAC,EAAE,CAFO;AAGVC,IAAAA,CAAC,EAAE,CAHO;AAIVC,IAAAA,CAAC,EAAE;AAJO;AAHO,CAArB,C,CAWA;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGT,YAAzB,EAAuCU,MAAvC,EAA+C;AAAE;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,KAAK,CAACa,SAAX;AACE,aAAO,EACL,GAAGH,KADE;AACK;AACVR,QAAAA,MAAM,EAAEQ,KAAK,CAACR,MAAN,GAAe,CAFlB;AAEqB;AAC1BY,QAAAA,SAAS,EAAE,EAAE,GAAGJ,KAAK,CAACN,UAAX;AAAuBE,UAAAA,CAAC,EAAE;AAA1B,SAHN,CAGoC;;AAHpC,OAAP;;AAKF,SAAKN,KAAK,CAACe,SAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,MAAM,EAAEQ,KAAK,CAACR,MAAN,GAAe;AAFlB,OAAP;;AAIF;AACE,aAAOQ,KAAP;AAAc;AAblB;AAeD","sourcesContent":["import * as types from '../actions/ActionTypes';\n\n// 초기상태 정하기\n\nconst initialState = {\n  number: 0, // 최초 초기상태 정의\n  dummy: 'dumbdumb',\n  dumbObject: {\n    d: 0,\n    u: 1,\n    m: 2,\n    b: 3\n  }\n};\n\n// eslint-disable-next-line max-len\nexport default function counter(state = initialState, action) { // 초기값 입력이 undefined일 때 initialState 할당\n  switch (action.type) {\n    case types.INCREMENT:\n      return {\n        ...state, // ...state에서 기존 정의한 state를 모두 복사해옴.\n        number: state.number + 1, // 그 중 number에 새 값 설정\n        dumbObjct: { ...state.dumbObject, u: 0 } // object가 내부 state에 있을 경우 값 덮어씌우기\n      };\n    case types.DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1\n      };\n    default:\n      return state; // 기존 상태 그냥 전달. 이 세 케이스에 SET_COLOR가 없으므로 다른 reducer를 찾게 됨\n  }\n}\n"]},"metadata":{},"sourceType":"module"}