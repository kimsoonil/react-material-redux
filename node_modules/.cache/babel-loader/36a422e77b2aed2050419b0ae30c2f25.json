{"ast":null,"code":"import { userConstants } from '../constants';\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error\n      };\n\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return { ...state,\n        items: state.items.map(user => user.id === action.id ? { ...user,\n          deleting: true\n        } : user)\n      };\n\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter(user => user.id !== action.id)\n      };\n\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n      return { ...state,\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const {\n              deleting,\n              ...userCopy\n            } = user; // return copy of user with 'deleteError:[error]' property\n\n            return { ...userCopy,\n              deleteError: action.error\n            };\n          }\n\n          return user;\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/reducers/users.reducer.js"],"names":["userConstants","users","state","action","type","GETALL_REQUEST","loading","GETALL_SUCCESS","items","GETALL_FAILURE","error","DELETE_REQUEST","map","user","id","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAa,CAACK,cAAnB;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKN,aAAa,CAACO,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEL,MAAM,CAACF;AADT,OAAP;;AAGF,SAAKD,aAAa,CAACS,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEP,MAAM,CAACO;AADT,OAAP;;AAGF,SAAKV,aAAa,CAACW,cAAnB;AACE;AACA,aAAO,EACL,GAAGT,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAnB,GAC9B,EAAE,GAAGD,IAAL;AAAWE,UAAAA,QAAQ,EAAE;AAArB,SAD8B,GAE9BF,IAFG;AAFF,OAAP;;AAMF,SAAKb,aAAa,CAACgB,cAAnB;AACE;AACA,aAAO;AACLR,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYS,MAAZ,CAAoBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAhD;AADF,OAAP;;AAGF,SAAKd,aAAa,CAACkB,cAAnB;AACE;AACA,aAAO,EACL,GAAGhB,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IAAU;AAC/B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB;AACA,kBAAM;AAAEC,cAAAA,QAAF;AAAY,iBAAGI;AAAf,gBAA4BN,IAAlC,CAFyB,CAGzB;;AACA,mBAAO,EAAE,GAAGM,QAAL;AAAeC,cAAAA,WAAW,EAAEjB,MAAM,CAACO;AAAnC,aAAP;AACD;;AAED,iBAAOG,IAAP;AACD,SATM;AAFF,OAAP;;AAaF;AACE,aAAOX,KAAP;AA1CJ;AA4CD","sourcesContent":["import { userConstants } from '../constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error\n      };\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return {\n        ...state,\n        items: state.items.map((user) => (user.id === action.id\n          ? { ...user, deleting: true }\n          : user))\n      };\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter((user) => user.id !== action.id)\n      };\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n      return {\n        ...state,\n        items: state.items.map((user) => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const { deleting, ...userCopy } = user;\n            // return copy of user with 'deleteError:[error]' property\n            return { ...userCopy, deleteError: action.error };\n          }\n\n          return user;\n        })\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}