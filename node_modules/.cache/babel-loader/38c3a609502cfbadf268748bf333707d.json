{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { AuthError } from \"../error/AuthError\";\n/**\r\n * @hidden\r\n */\n\nvar BrowserStorage =\n/** @class */\nfunction () {\n  function BrowserStorage(cacheLocation) {\n    if (!window) {\n      throw AuthError.createNoWindowObjectError(\"Browser storage class could not find window object\");\n    }\n\n    var storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\n\n    if (!storageSupported) {\n      throw ClientConfigurationError.createStorageNotSupportedError(cacheLocation);\n    }\n\n    this.cacheLocation = cacheLocation;\n  }\n  /**\r\n   * add value to storage\r\n   * @param key\r\n   * @param value\r\n   * @param enableCookieStorage\r\n   */\n\n\n  BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {\n    window[this.cacheLocation].setItem(key, value);\n\n    if (enableCookieStorage) {\n      this.setItemCookie(key, value);\n    }\n  };\n  /**\r\n   * get one item by key from storage\r\n   * @param key\r\n   * @param enableCookieStorage\r\n   */\n\n\n  BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {\n    if (enableCookieStorage && this.getItemCookie(key)) {\n      return this.getItemCookie(key);\n    }\n\n    return window[this.cacheLocation].getItem(key);\n  };\n  /**\r\n   * remove value from storage\r\n   * @param key\r\n   */\n\n\n  BrowserStorage.prototype.removeItem = function (key) {\n    return window[this.cacheLocation].removeItem(key);\n  };\n  /**\r\n   * clear storage (remove all items from it)\r\n   */\n\n\n  BrowserStorage.prototype.clear = function () {\n    return window[this.cacheLocation].clear();\n  };\n  /**\r\n   * add value to cookies\r\n   * @param cName\r\n   * @param cValue\r\n   * @param expires\r\n   */\n\n\n  BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {\n    var cookieStr = cName + \"=\" + cValue + \";path=/;\";\n\n    if (expires) {\n      var expireTime = this.getCookieExpirationTime(expires);\n      cookieStr += \"expires=\" + expireTime + \";\";\n    }\n\n    document.cookie = cookieStr;\n  };\n  /**\r\n   * get one item by key from cookies\r\n   * @param cName\r\n   */\n\n\n  BrowserStorage.prototype.getItemCookie = function (cName) {\n    var name = cName + \"=\";\n    var ca = document.cookie.split(\";\");\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Clear an item in the cookies by key\r\n   * @param cName\r\n   */\n\n\n  BrowserStorage.prototype.clearItemCookie = function (cName) {\n    this.setItemCookie(cName, \"\", -1);\n  };\n  /**\r\n   * Get cookie expiration time\r\n   * @param cookieLifeDays\r\n   */\n\n\n  BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\n    var today = new Date();\n    var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\n    return expr.toUTCString();\n  };\n\n  return BrowserStorage;\n}();\n\nexport { BrowserStorage };","map":{"version":3,"sources":["../../src/cache/BrowserStorage.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { AuthError } from \"../error/AuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(cacheLocation) {\r\n        if (!window) {\r\n            throw AuthError.createNoWindowObjectError(\"Browser storage class could not find window object\");\r\n        }\r\n        var storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n        if (!storageSupported) {\r\n            throw ClientConfigurationError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        this.cacheLocation = cacheLocation;\r\n    }\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        window[this.cacheLocation].setItem(key, value);\r\n        if (enableCookieStorage) {\r\n            this.setItemCookie(key, value);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {\r\n        if (enableCookieStorage && this.getItemCookie(key)) {\r\n            return this.getItemCookie(key);\r\n        }\r\n        return window[this.cacheLocation].getItem(key);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        return window[this.cacheLocation].removeItem(key);\r\n    };\r\n    /**\r\n     * clear storage (remove all items from it)\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        return window[this.cacheLocation].clear();\r\n    };\r\n    /**\r\n     * add value to cookies\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        var cookieStr = cName + \"=\" + cValue + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cName) {\r\n        var name = cName + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === \" \") {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cName) {\r\n        this.setItemCookie(cName, \"\", -1);\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\r\n        return expr.toUTCString();\r\n    };\r\n    return BrowserStorage;\r\n}());\r\nexport { BrowserStorage };\r\n//# sourceMappingURL=BrowserStorage.js.map"]},"metadata":{},"sourceType":"module"}