{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/LoginView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Grid, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { userActions } from '../../actions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const loggingIn = useSelector(state => state.authentication.loggingIn);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    email,\n    password\n  } = inputs;\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: inputs.email,\n      password: inputs.password\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: e => {\n      console.log(e); // navigate('/app/dashboard', { replace: true });\n\n      if (email && password) {\n        setSubmitted(true); // get return url from location state or default to home page\n\n        const {\n          from\n        } = location.state || {\n          from: {\n            pathname: \"/app/dashboard\"\n          }\n        };\n        dispatch(userActions.login(email, password, from));\n      }\n    },\n    onChange: e => {\n      console.log(e.target); // const { name, value } = e.target;\n      // setInputs(inputs => ({ ...inputs, [name]: value }));\n    },\n    onBlur: e => {\n      console.log(e.target); // const { name, value } = e.target;\n      // setInputs(inputs => ({ ...inputs, [name]: value }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting,\n    touched,\n    handleSubmit,\n    handleChange,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Sign in on the internal platform\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, loggingIn && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 35\n    }\n  }), \"Sign in now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Don't have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/register\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, \"Sign up\")))))));\n};\n\nexport default LoginView;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/LoginView.js"],"names":["React","useState","useEffect","Link","RouterLink","useNavigate","useLocation","Yup","Formik","Box","Button","Container","Grid","TextField","Typography","makeStyles","Page","useDispatch","useSelector","CircularProgress","userActions","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","LoginView","classes","navigate","submitted","setSubmitted","inputs","setInputs","email","password","loggingIn","state","authentication","dispatch","location","object","shape","string","max","required","e","console","log","from","pathname","login","target","values","errors","isSubmitting","touched","handleSubmit","handleChange","handleBlur","Boolean","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { userActions } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const loggingIn = useSelector((state) => state.authentication.loggingIn);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { email, password } = inputs;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: inputs.email,\n              password: inputs.password\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={(e) => {\n              console.log(e);\n              // navigate('/app/dashboard', { replace: true });\n              if (email && password) {\n                setSubmitted(true);\n                // get return url from location state or default to home page\n                const { from } = location.state || { from: { pathname: \"/app/dashboard\" } };\n                dispatch(userActions.login(email, password, from));\n              }\n            }}\n            onChange={(e) => {\n              console.log(e.target);\n              // const { name, value } = e.target;\n              // setInputs(inputs => ({ ...inputs, [name]: value }));\n            }}\n            onBlur={(e) => {\n              console.log(e.target);\n              // const { name, value } = e.target;\n              // setInputs(inputs => ({ ...inputs, [name]: value }));\n            }}\n          >\n            {({\n              values,\n              errors,\n              isSubmitting,\n              touched,\n              handleSubmit,\n              handleChange,\n              handleBlur\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the internal platform\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    {loggingIn && <CircularProgress />}\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}