{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js\";\nimport React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      firstName: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      password: Yup.string().max(255).required('password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: e => {\n      e.preventDefault();\n      setSubmitted(true);\n\n      if (user.firstName && user.lastName && user.username && user.password) {\n        dispatch(userActions.register(user));\n      } //navigate('/app/dashboard', { replace: true });\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"Use your email to create new account\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.firstName && errors.firstName),\n    fullWidth: true,\n    helperText: touched.firstName && errors.firstName,\n    label: \"First name\",\n    margin: \"normal\",\n    name: \"firstName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.firstName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.lastName && errors.lastName),\n    fullWidth: true,\n    helperText: touched.lastName && errors.lastName,\n    label: \"Last name\",\n    margin: \"normal\",\n    name: \"lastName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    ml: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: values.policy,\n    name: \"policy\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"I have read the\", ' ', /*#__PURE__*/React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"always\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Terms and Conditions\"))), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \"Sign up now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/login\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"Sign in\")))))));\n};\n\nexport default RegisterView;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js"],"names":["React","Link","RouterLink","useNavigate","Yup","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","makeStyles","Page","useDispatch","useSelector","userActions","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","RegisterView","classes","navigate","submitted","setSubmitted","useState","registering","state","registration","dispatch","email","firstName","lastName","password","policy","object","shape","string","max","required","boolean","oneOf","e","preventDefault","user","username","register","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={(e) => {\n              e.preventDefault();\n\n              setSubmitted(true);\n              if (user.firstName && user.lastName && user.username && user.password) {\n                dispatch(userActions.register(user));\n              }\n\n              //navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"]},"metadata":{},"sourceType":"module"}