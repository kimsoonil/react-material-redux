{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nimport * as tslib_1 from \"tslib\";\nimport { AuthError } from \"./AuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nexport var ClientAuthErrorMessage = {\n  multipleCacheAuthorities: {\n    code: \"multiple_authorities\",\n    desc: \"Multiple authorities found in the cache. Pass authority in the API overload.\"\n  },\n  endpointResolutionError: {\n    code: \"endpoints_resolution_error\",\n    desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n  },\n  popUpWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  tokenRenewalError: {\n    code: \"token_renewal_error\",\n    desc: \"Token renewal operation failed due to timeout.\"\n  },\n  invalidIdToken: {\n    code: \"invalid_id_token\",\n    desc: \"Invalid ID token format.\"\n  },\n  invalidStateError: {\n    code: \"invalid_state_error\",\n    desc: \"Invalid state.\"\n  },\n  nonceMismatchError: {\n    code: \"nonce_mismatch_error\",\n    desc: \"Nonce is not matching, Nonce received: \"\n  },\n  loginProgressError: {\n    code: \"login_progress_error\",\n    desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\n  },\n  acquireTokenProgressError: {\n    code: \"acquiretoken_progress_error\",\n    desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  callbackError: {\n    code: \"callback_error\",\n    desc: \"Error occurred in token received callback function.\"\n  },\n  userLoginRequiredError: {\n    code: \"user_login_error\",\n    desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\n  },\n  userDoesNotExistError: {\n    code: \"user_non_existent\",\n    desc: \"User object does not exist. Please call a login API.\"\n  },\n  clientInfoDecodingError: {\n    code: \"client_info_decoding_error\",\n    desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n  },\n  clientInfoNotPopulatedError: {\n    code: \"client_info_not_populated_error\",\n    desc: \"The service did not populate client_info in the response, Please verify with the service team\"\n  },\n  nullOrEmptyIdToken: {\n    code: \"null_or_empty_id_token\",\n    desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\n  },\n  idTokenNotParsed: {\n    code: \"id_token_parsing_error\",\n    desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\n  },\n  tokenEncodingError: {\n    code: \"token_encoding_error\",\n    desc: \"The token to be decoded is not encoded correctly.\"\n  },\n  invalidInteractionType: {\n    code: \"invalid_interaction_type\",\n    desc: \"The interaction type passed to the handler was incorrect or unknown\"\n  },\n  cacheParseError: {\n    code: \"cannot_parse_cache\",\n    desc: \"The cached token key is not a valid JSON and cannot be parsed\"\n  },\n  blockTokenRequestsInHiddenIframe: {\n    code: \"block_token_requests\",\n    desc: \"Token calls are blocked in hidden iframes\"\n  }\n};\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\n\nvar ClientAuthError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ClientAuthError, _super);\n\n  function ClientAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ClientAuthError\";\n    Object.setPrototypeOf(_this, ClientAuthError.prototype);\n    return _this;\n  }\n\n  ClientAuthError.createEndpointResolutionError = function (errDetail) {\n    var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\n\n    if (errDetail && !StringUtils.isEmpty(errDetail)) {\n      errorMessage += \" Details: \" + errDetail;\n    }\n\n    return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\n  };\n\n  ClientAuthError.createMultipleAuthoritiesInCacheError = function (scope) {\n    return new ClientAuthError(ClientAuthErrorMessage.multipleCacheAuthorities.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleCacheAuthorities.desc + \".\");\n  };\n\n  ClientAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\n\n    if (errDetail && !StringUtils.isEmpty(errDetail)) {\n      errorMessage += \" Details: \" + errDetail;\n    }\n\n    return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\n  };\n\n  ClientAuthError.createTokenRenewalTimeoutError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\n  };\n\n  ClientAuthError.createInvalidIdTokenError = function (idToken) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\n  }; // TODO: Is this not a security flaw to send the user the state expected??\n\n\n  ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\n  }; // TODO: Is this not a security flaw to send the user the Nonce expected??\n\n\n  ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\n    return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\n  };\n\n  ClientAuthError.createLoginInProgressError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\n  };\n\n  ClientAuthError.createAcquireTokenInProgressError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\n  };\n\n  ClientAuthError.createUserCancelledError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\n  };\n\n  ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\n    return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\n  };\n\n  ClientAuthError.createUserLoginRequiredError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\n  };\n\n  ClientAuthError.createUserDoesNotExistError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\n  };\n\n  ClientAuthError.createClientInfoDecodingError = function (caughtError) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\n  };\n\n  ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\n  };\n\n  ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\n    return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\n  };\n\n  ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\n    return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\n  };\n\n  ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\n    return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\n  };\n\n  ClientAuthError.createInvalidInteractionTypeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\n  };\n\n  ClientAuthError.createCacheParseError = function (key) {\n    var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\n    return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\n  };\n\n  ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\n  };\n\n  return ClientAuthError;\n}(AuthError);\n\nexport { ClientAuthError };","map":{"version":3,"sources":["../../src/error/ClientAuthError.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nexport var ClientAuthErrorMessage = {\r\n    multipleCacheAuthorities: {\r\n        code: \"multiple_authorities\",\r\n        desc: \"Multiple authorities found in the cache. Pass authority in the API overload.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    tokenRenewalError: {\r\n        code: \"token_renewal_error\",\r\n        desc: \"Token renewal operation failed due to timeout.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state_error\",\r\n        desc: \"Invalid state.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch_error\",\r\n        desc: \"Nonce is not matching, Nonce received: \"\r\n    },\r\n    loginProgressError: {\r\n        code: \"login_progress_error\",\r\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    acquireTokenProgressError: {\r\n        code: \"acquiretoken_progress_error\",\r\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    callbackError: {\r\n        code: \"callback_error\",\r\n        desc: \"Error occurred in token received callback function.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\r\n    },\r\n    userDoesNotExistError: {\r\n        code: \"user_non_existent\",\r\n        desc: \"User object does not exist. Please call a login API.\"\r\n    },\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoNotPopulatedError: {\r\n        code: \"client_info_not_populated_error\",\r\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenNotParsed: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    tokenEncodingError: {\r\n        code: \"token_encoding_error\",\r\n        desc: \"The token to be decoded is not encoded correctly.\"\r\n    },\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cannot_parse_cache\",\r\n        desc: \"The cached token key is not a valid JSON and cannot be parsed\"\r\n    },\r\n    blockTokenRequestsInHiddenIframe: {\r\n        code: \"block_token_requests\",\r\n        desc: \"Token calls are blocked in hidden iframes\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    ClientAuthError.createEndpointResolutionError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createMultipleAuthoritiesInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleCacheAuthorities.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleCacheAuthorities.desc + \".\");\r\n    };\r\n    ClientAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createTokenRenewalTimeoutError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\r\n    };\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the state expected??\r\n    ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the Nonce expected??\r\n    ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\r\n    };\r\n    ClientAuthError.createLoginInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\r\n    };\r\n    ClientAuthError.createAcquireTokenInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\r\n    };\r\n    ClientAuthError.createUserCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\r\n    };\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    ClientAuthError.createUserDoesNotExistError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\r\n    };\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\r\n    };\r\n    ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\r\n    };\r\n    ClientAuthError.createInvalidInteractionTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\r\n    };\r\n    ClientAuthError.createCacheParseError = function (key) {\r\n        var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\r\nexport { ClientAuthError };\r\n//# sourceMappingURL=ClientAuthError.js.map"]},"metadata":{},"sourceType":"module"}