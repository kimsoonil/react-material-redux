{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/product/ProductListView/ProductCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Avatar, Box, Card, CardContent, Divider, Grid, Typography, makeStyles } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = ({\n  className,\n  product,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Product\",\n    src: product.media,\n    variant: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    color: \"textPrimary\",\n    gutterBottom: true,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, product.title), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    color: \"textPrimary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, product.description)), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n    className: classes.statsIcon,\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    display: \"inline\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Updated 2hr ago\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    className: classes.statsIcon,\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    display: \"inline\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, product.totalDownloads, ' ', \"Downloads\")))));\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/product/ProductListView/ProductCard.js"],"names":["React","PropTypes","clsx","Avatar","Box","Card","CardContent","Divider","Grid","Typography","makeStyles","AccessTimeIcon","GetAppIcon","useStyles","theme","root","display","flexDirection","statsItem","alignItems","statsIcon","marginRight","spacing","ProductCard","className","product","rest","classes","media","title","description","totalDownloads","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = ({ className, product, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mb={3}\n        >\n          <Avatar\n            alt=\"Product\"\n            src={product.media}\n            variant=\"square\"\n          />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Box flexGrow={1} />\n      <Divider />\n      <Box p={2}>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={2}\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads}\n              {' '}\n              Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}