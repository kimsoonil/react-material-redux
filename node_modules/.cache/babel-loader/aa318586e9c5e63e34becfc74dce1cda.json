{"ast":null,"code":"var _jsxFileName = \"/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    username: '',\n    password: ''\n  }); // reset login status\n\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(user => ({ ...user,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    if (user.firstName && user.lastName && user.username && user.password) {\n      dispatch(userActions.register(user));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Use your email to create new account\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.firstName && errors.firstName),\n    fullWidth: true,\n    helperText: touched.firstName && errors.firstName,\n    label: \"First name\",\n    margin: \"normal\",\n    name: \"firstName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.firstName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.lastName && errors.lastName),\n    fullWidth: true,\n    helperText: touched.lastName && errors.lastName,\n    label: \"Last name\",\n    margin: \"normal\",\n    name: \"lastName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, isSubmitting && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 38\n    }\n  }), \"Sign up now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/login\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, \"Sign in\"))))));\n};\n\nexport default RegisterView;","map":{"version":3,"sources":["/Users/sunil.kim/Desktop/workspace/react-material-dashboard/src/views/auth/RegisterView.js"],"names":["React","useState","useEffect","Link","RouterLink","useNavigate","CircularProgress","Yup","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","makeStyles","Page","useDispatch","useSelector","userActions","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","RegisterView","classes","navigate","submitted","setSubmitted","registering","state","registration","dispatch","user","setUser","firstName","lastName","username","password","logout","handleChange","e","name","value","target","handleSubmit","preventDefault","register","Boolean","touched","errors","handleBlur","values","email","policy","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector(state => state.registration.registering);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    username: '',\n    password: ''\n});\n\n  // reset login status\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setUser((user) => ({ ...user, [name]: value }));\n  }\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (user.firstName && user.lastName && user.username && user.password) {\n        dispatch(userActions.register(user));\n    }\n}\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    {isSubmitting && <CircularProgress />}\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"]},"metadata":{},"sourceType":"module"}